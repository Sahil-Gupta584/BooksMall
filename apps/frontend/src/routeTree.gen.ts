/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as BooksBookIdIndexRouteImport } from './routes/books/$bookId/index'
import { Route as ProtectedSellIndexRouteImport } from './routes/_protected/sell/index'
import { Route as ProtectedMyListingsIndexRouteImport } from './routes/_protected/myListings/index'
import { Route as ProtectedFeedbacksIndexRouteImport } from './routes/_protected/feedbacks/index'
import { Route as ProtectedChatsIndexRouteImport } from './routes/_protected/chats/index'
import { Route as BooksBookIdEditIndexRouteImport } from './routes/books/$bookId/edit/index'
import { Route as ProtectedChatsSellerIdIndexRouteImport } from './routes/_protected/chats/$sellerId/index'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const BooksBookIdIndexRoute = BooksBookIdIndexRouteImport.update({
  id: '/books/$bookId/',
  path: '/books/$bookId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedSellIndexRoute = ProtectedSellIndexRouteImport.update({
  id: '/sell/',
  path: '/sell/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedMyListingsIndexRoute =
  ProtectedMyListingsIndexRouteImport.update({
    id: '/myListings/',
    path: '/myListings/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedFeedbacksIndexRoute = ProtectedFeedbacksIndexRouteImport.update({
  id: '/feedbacks/',
  path: '/feedbacks/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedChatsIndexRoute = ProtectedChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => ProtectedRoute,
} as any)
const BooksBookIdEditIndexRoute = BooksBookIdEditIndexRouteImport.update({
  id: '/books/$bookId/edit/',
  path: '/books/$bookId/edit/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedChatsSellerIdIndexRoute =
  ProtectedChatsSellerIdIndexRouteImport.update({
    id: '/chats/$sellerId/',
    path: '/chats/$sellerId/',
    getParentRoute: () => ProtectedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/chats': typeof ProtectedChatsIndexRoute
  '/feedbacks': typeof ProtectedFeedbacksIndexRoute
  '/myListings': typeof ProtectedMyListingsIndexRoute
  '/sell': typeof ProtectedSellIndexRoute
  '/books/$bookId': typeof BooksBookIdIndexRoute
  '/chats/$sellerId': typeof ProtectedChatsSellerIdIndexRoute
  '/books/$bookId/edit': typeof BooksBookIdEditIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/chats': typeof ProtectedChatsIndexRoute
  '/feedbacks': typeof ProtectedFeedbacksIndexRoute
  '/myListings': typeof ProtectedMyListingsIndexRoute
  '/sell': typeof ProtectedSellIndexRoute
  '/books/$bookId': typeof BooksBookIdIndexRoute
  '/chats/$sellerId': typeof ProtectedChatsSellerIdIndexRoute
  '/books/$bookId/edit': typeof BooksBookIdEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/_protected/chats/': typeof ProtectedChatsIndexRoute
  '/_protected/feedbacks/': typeof ProtectedFeedbacksIndexRoute
  '/_protected/myListings/': typeof ProtectedMyListingsIndexRoute
  '/_protected/sell/': typeof ProtectedSellIndexRoute
  '/books/$bookId/': typeof BooksBookIdIndexRoute
  '/_protected/chats/$sellerId/': typeof ProtectedChatsSellerIdIndexRoute
  '/books/$bookId/edit/': typeof BooksBookIdEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/chats'
    | '/feedbacks'
    | '/myListings'
    | '/sell'
    | '/books/$bookId'
    | '/chats/$sellerId'
    | '/books/$bookId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/chats'
    | '/feedbacks'
    | '/myListings'
    | '/sell'
    | '/books/$bookId'
    | '/chats/$sellerId'
    | '/books/$bookId/edit'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/login/'
    | '/_protected/chats/'
    | '/_protected/feedbacks/'
    | '/_protected/myListings/'
    | '/_protected/sell/'
    | '/books/$bookId/'
    | '/_protected/chats/$sellerId/'
    | '/books/$bookId/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
  BooksBookIdIndexRoute: typeof BooksBookIdIndexRoute
  BooksBookIdEditIndexRoute: typeof BooksBookIdEditIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/books/$bookId/': {
      id: '/books/$bookId/'
      path: '/books/$bookId'
      fullPath: '/books/$bookId'
      preLoaderRoute: typeof BooksBookIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/sell/': {
      id: '/_protected/sell/'
      path: '/sell'
      fullPath: '/sell'
      preLoaderRoute: typeof ProtectedSellIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/myListings/': {
      id: '/_protected/myListings/'
      path: '/myListings'
      fullPath: '/myListings'
      preLoaderRoute: typeof ProtectedMyListingsIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/feedbacks/': {
      id: '/_protected/feedbacks/'
      path: '/feedbacks'
      fullPath: '/feedbacks'
      preLoaderRoute: typeof ProtectedFeedbacksIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/chats/': {
      id: '/_protected/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ProtectedChatsIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/books/$bookId/edit/': {
      id: '/books/$bookId/edit/'
      path: '/books/$bookId/edit'
      fullPath: '/books/$bookId/edit'
      preLoaderRoute: typeof BooksBookIdEditIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/chats/$sellerId/': {
      id: '/_protected/chats/$sellerId/'
      path: '/chats/$sellerId'
      fullPath: '/chats/$sellerId'
      preLoaderRoute: typeof ProtectedChatsSellerIdIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface ProtectedRouteChildren {
  ProtectedChatsIndexRoute: typeof ProtectedChatsIndexRoute
  ProtectedFeedbacksIndexRoute: typeof ProtectedFeedbacksIndexRoute
  ProtectedMyListingsIndexRoute: typeof ProtectedMyListingsIndexRoute
  ProtectedSellIndexRoute: typeof ProtectedSellIndexRoute
  ProtectedChatsSellerIdIndexRoute: typeof ProtectedChatsSellerIdIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedChatsIndexRoute: ProtectedChatsIndexRoute,
  ProtectedFeedbacksIndexRoute: ProtectedFeedbacksIndexRoute,
  ProtectedMyListingsIndexRoute: ProtectedMyListingsIndexRoute,
  ProtectedSellIndexRoute: ProtectedSellIndexRoute,
  ProtectedChatsSellerIdIndexRoute: ProtectedChatsSellerIdIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
  BooksBookIdIndexRoute: BooksBookIdIndexRoute,
  BooksBookIdEditIndexRoute: BooksBookIdEditIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
